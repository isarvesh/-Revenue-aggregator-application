{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sarvesh\\\\Downloads\\\\Revenue aggregator application\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options1 = {\n  minimumFractionDigits: 2\n};\nconst formatNumber = number => new Intl.NumberFormat(\"en-IN\", options1).format(number);\nconst sortOn = (arr, prop) => arr.sort(function (a, b) {\n  // console.log(a, b);\n  if (a[prop] < b[prop]) {\n    return -1;\n  } else if (a[prop] > b[prop]) {\n    return 1;\n  } else {\n    return 0;\n  }\n});\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stores: [],\n      filtered: []\n    };\n    this.getValueInput = e => {\n      const inputValue = e.target.value;\n      let finalStore = this.state.stores;\n      this.setState({\n        filtered: finalStore.filter(item => item.name.toLowerCase().includes(inputValue.toLowerCase()))\n      });\n    };\n  }\n  componentDidMount() {\n    //Fetch the data from the Branch JSON file\n    Promise.all([fetch('http://localhost:3000/api/branch1.json'), fetch('http://localhost:3000/api/branch2.json'), fetch('http://localhost:3000/api/branch3.json')]).then(responses => {\n      // console.log(responses);\n      return Promise.all(responses.map(function (response) {\n        return response.json();\n      }));\n    }).then(data => {\n      // console.log(data);\n      const branch1 = data[0].products;\n      const branch2 = data[1].products;\n      const branch3 = data[2].products;\n      const all = [branch1, branch2, branch3];\n      // console.log(all[0]);\n      // console.log(all[1]);\n      // console.log(all[2]);\n      // console.log(all);\n      let unsorted = [];\n      let finalProducts = [];\n\n      //Push all the branch data into single array\n      for (let i = 0; i < all.length; i++) {\n        for (let j = 0; j < all[i].length; j++) {\n          unsorted.push({\n            name: all[i][j].name,\n            revenue: all[i][j].unitPrice * all[i][j].sold\n          });\n        }\n      }\n      // console.log(unsorted);\n\n      //Sort all the Products with respect to Name\n      sortOn(unsorted, \"name\");\n\n      //Print all the products\n      // for (let i = 0; i < unsorted.length; i++) {\n      //   console.log(unsorted[i].name);\n      // }\n\n      var holder = {};\n\n      // Consider all the products in all the branches means those products which comes with same name in all the Branches\n      var sum = 0;\n      for (let i = 0; i < unsorted.length - 1; i++) {\n        if (unsorted[i].name === unsorted[i + 1].name) {\n          sum = unsorted[i].revenue + unsorted[i + 1].revenue;\n        } else {\n          holder[unsorted[i].name] = unsorted[i].revenue;\n        }\n        holder[unsorted[i].name] = sum;\n      }\n\n      /*\r\n      Consider only that products which comes at the end in the branch\r\n        for (let i = 0; i < unsorted.length; i++) \r\n        {\r\n          holder[unsorted[i].name] = unsorted[i].revenue;       \r\n        }\r\n      */\n\n      // console.log(holder);\n\n      // console.log(Object.keys(holder));    // To count the length of the JSON\n\n      //Push the data into array from the object\n      for (var prop in holder) {\n        finalProducts.push({\n          name: prop,\n          revenue: holder[prop]\n        });\n      }\n      // console.log(finalProducts);\n\n      this.setState({\n        stores: finalProducts\n      });\n      console.log(\"componentDidMount function\");\n    }).catch(error => {\n      // if there's an error, print on the console\n\n      console.log(error);\n    });\n  }\n  displayTotalRev() {\n    //Display total at the End\n    let finalStore = this.state.stores;\n    let filteredStore = this.state.filtered;\n    let sum;\n    if (filteredStore.length === 0) {\n      finalStore.reduce(function (prev, current) {\n        // console.log(prev, current);\n        sum = prev + current.revenue;\n        return sum;\n      }, 0);\n    } else {\n      filteredStore.reduce(function (prev, current) {\n        // console.log(prev + \" \" + current);\n        sum = prev + current.revenue;\n        return sum;\n      }, 0);\n    }\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Total\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: formatNumber(sum)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  }\n  renderTableData() {\n    //Render all the Data into Table\n\n    let filteredStore = this.state.filtered;\n    // console.log(filteredStore, \"1\");\n\n    let finalStore = this.state.stores;\n    // console.log(finalStore, \"2\");\n\n    if (filteredStore.length === 0) {\n      return finalStore.map(store => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: store.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatNumber(store.revenue)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, store.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this);\n      });\n    } else {\n      return filteredStore.map(store => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: store.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatNumber(store.revenue)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, store.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this);\n      });\n    }\n  }\n  render() {\n    console.log(\"render fuction\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.getValueInput,\n        placeholder: \"Search for Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Revenue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.renderTableData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          children: this.displayTotalRev()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","options1","minimumFractionDigits","formatNumber","number","Intl","NumberFormat","format","sortOn","arr","prop","sort","a","b","App","constructor","args","state","stores","filtered","getValueInput","e","inputValue","target","value","finalStore","setState","filter","item","name","toLowerCase","includes","componentDidMount","Promise","all","fetch","then","responses","map","response","json","data","branch1","products","branch2","branch3","unsorted","finalProducts","i","length","j","push","revenue","unitPrice","sold","holder","sum","console","log","catch","error","displayTotalRev","filteredStore","reduce","prev","current","children","fileName","_jsxFileName","lineNumber","columnNumber","renderTableData","store","render","className","type","onChange","placeholder"],"sources":["C:/Users/Sarvesh/Downloads/Revenue aggregator application/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst options1 = { minimumFractionDigits: 2 };\r\nconst formatNumber = (number) => new Intl.NumberFormat(\"en-IN\", options1).format(number);\r\nconst sortOn = (arr, prop) => arr.sort(\r\n  function (a, b) {\r\n    // console.log(a, b);\r\n    if (a[prop] < b[prop]) {\r\n      return -1;\r\n    } else if (a[prop] > b[prop]) {\r\n      return 1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n);\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    stores: [],\r\n    filtered: []\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    //Fetch the data from the Branch JSON file\r\n    Promise.all([\r\n      fetch('http://localhost:3000/api/branch1.json'),\r\n      fetch('http://localhost:3000/api/branch2.json'),\r\n      fetch('http://localhost:3000/api/branch3.json')\r\n    ]).then(responses => {\r\n      // console.log(responses);\r\n      return Promise.all(responses.map(function (response) {\r\n        return response.json();\r\n      }));\r\n    }).then(data => {\r\n      // console.log(data);\r\n      const branch1 = data[0].products;\r\n      const branch2 = data[1].products;\r\n      const branch3 = data[2].products;\r\n\r\n\r\n      const all = [branch1, branch2, branch3];\r\n      // console.log(all[0]);\r\n      // console.log(all[1]);\r\n      // console.log(all[2]);\r\n      // console.log(all);\r\n      let unsorted = [];\r\n      let finalProducts = [];\r\n\r\n      //Push all the branch data into single array\r\n      for (let i = 0; i < all.length; i++) {\r\n        for (let j = 0; j < all[i].length; j++) {\r\n          unsorted.push(\r\n            {\r\n              name: all[i][j].name,\r\n              revenue: all[i][j].unitPrice * all[i][j].sold\r\n            });\r\n        }\r\n      }\r\n      // console.log(unsorted);\r\n\r\n      //Sort all the Products with respect to Name\r\n      sortOn(unsorted, \"name\");\r\n\r\n      //Print all the products\r\n      // for (let i = 0; i < unsorted.length; i++) {\r\n      //   console.log(unsorted[i].name);\r\n      // }\r\n\r\n      var holder = {};\r\n\r\n      // Consider all the products in all the branches means those products which comes with same name in all the Branches\r\n      var sum = 0;\r\n      for (let i = 0; i < unsorted.length - 1; i++) {\r\n        if (unsorted[i].name === unsorted[i + 1].name) {\r\n          sum = unsorted[i].revenue + unsorted[i + 1].revenue\r\n        }\r\n        else {\r\n          holder[unsorted[i].name] = unsorted[i].revenue;\r\n        }\r\n        holder[unsorted[i].name] = sum;\r\n\r\n      }\r\n\r\n      /*\r\n      Consider only that products which comes at the end in the branch\r\n\r\n      for (let i = 0; i < unsorted.length; i++) \r\n        {\r\n          holder[unsorted[i].name] = unsorted[i].revenue;       \r\n        }\r\n      */\r\n\r\n      // console.log(holder);\r\n\r\n      // console.log(Object.keys(holder));    // To count the length of the JSON\r\n\r\n\r\n      //Push the data into array from the object\r\n      for (var prop in holder) {\r\n        finalProducts.push({ name: prop, revenue: holder[prop] });\r\n      }\r\n      // console.log(finalProducts);\r\n\r\n\r\n      this.setState({ stores: finalProducts });\r\n      console.log(\"componentDidMount function\");\r\n    }).catch(error => {\r\n\r\n      // if there's an error, print on the console\r\n\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getValueInput = (e) => {\r\n\r\n    const inputValue = e.target.value;\r\n    let finalStore = this.state.stores;\r\n    this.setState({\r\n      filtered: finalStore.filter(item => item.name.toLowerCase().includes(inputValue.toLowerCase()))\r\n    });\r\n  }\r\n\r\n\r\n  displayTotalRev() {\r\n\r\n    //Display total at the End\r\n    let finalStore = this.state.stores;\r\n    let filteredStore = this.state.filtered;\r\n    let sum;\r\n\r\n    if (filteredStore.length === 0) {\r\n      finalStore.reduce(function (prev, current) {\r\n        // console.log(prev, current);\r\n        sum = prev + current.revenue;\r\n        return sum\r\n      }, 0);\r\n    } else {\r\n      filteredStore.reduce(function (prev, current) {\r\n        // console.log(prev + \" \" + current);\r\n        sum = prev + current.revenue;\r\n        return sum\r\n      }, 0);\r\n    }\r\n\r\n    return (\r\n      <tr>\r\n        <td>Total</td>\r\n        <td>{formatNumber(sum)}</td>\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  renderTableData() {\r\n\r\n    //Render all the Data into Table\r\n\r\n    let filteredStore = this.state.filtered;\r\n    // console.log(filteredStore, \"1\");\r\n\r\n    let finalStore = this.state.stores;\r\n    // console.log(finalStore, \"2\");\r\n\r\n    if (filteredStore.length === 0) {\r\n      return finalStore.map((store) => {\r\n        return (\r\n          <tr key={store.name}>\r\n            <td>{store.name}</td>\r\n            <td>{formatNumber(store.revenue)}</td>\r\n          </tr>\r\n        )\r\n      })\r\n    } else {\r\n      return filteredStore.map((store) => {\r\n\r\n        return (\r\n          <tr key={store.name}>\r\n            <td>{store.name}</td>\r\n            <td>{formatNumber(store.revenue)}</td>\r\n          </tr>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(\"render fuction\");\r\n    return (\r\n      <div className=\"product-list\">\r\n        <input type=\"text\" onChange={this.getValueInput} placeholder=\"Search for Product\"></input>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Product</th>\r\n              <th>Revenue</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.renderTableData()}\r\n          </tbody>\r\n          <tfoot>\r\n            {this.displayTotalRev()}\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}